summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
Date)
}
if (Agg_interval == "Weekly") {
Agg_data <- arrange(FullData %>%
group_by(WD) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
WD)
}
if (Agg_interval == "Monthly") {
Agg_data <- arrange(FullData %>%
group_by(yearmonth, month) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm),
Datadays=n_distinct(Date)),
yearmonth)
Agg_data$MonthDays <- with(Agg_data, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(yearmonth==200802,29,28))))
Agg_data$Active_Daily <- with(Agg_data, Active_whm/Datadays)
Agg_data$monthname <- as.character(month(ymd(010101) + months(Agg_data$month-1),
label=TRUE,
abbr=TRUE))
}
return(Agg_data)
}
monthlyData <- AggregateMinuteData(TotalMinuteData,"Monthly")
monthlyData
monthlyData$monthname
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
select(monthname, Active_whm*0.17)
str(TotalMinuteData)
AggregateMinuteData <- function(FullData, Agg_interval) {
#this function aggregates the minute data to daily, weekly or monthly data
if (Agg_interval == "Daily") {
Agg_data <- arrange(FullData %>%
group_by(Date) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
Date)
}
if (Agg_interval == "Weekly") {
Agg_data <- arrange(FullData %>%
group_by(WD) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
WD)
}
if (Agg_interval == "Monthly") {
Agg_data <- arrange(FullData %>%
group_by(yearmonth, year,month) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm),
Datadays=n_distinct(Date)),
yearmonth)
Agg_data$MonthDays <- with(Agg_data, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(yearmonth==200802,29,28))))
Agg_data$Active_Daily <- with(Agg_data, Active_whm/Datadays)
Agg_data$monthname <- as.character(month(ymd(010101) + months(Agg_data$month-1),
label=TRUE,
abbr=TRUE))
}
return(Agg_data)
}
monthlyData <- AggregateMinuteData(TotalMinuteData,"Monthly")
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
select(monthname, Active_whm*0.17)
monthlyData
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
select(monthname, Active_whm)
monthlyData %>%
filter(year==2010) %>%
select(monthname, Active_whm)
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
select(monthname, Active_whm)
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(monthname, Active_whm)
MonthlyActual
FC_Monthly_DF
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(monthname, Active_whm/1000*0.17)
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(monthname, Active_whm)
MonthlyActual
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(monthname, Active_whm) %>%
rename(monthCost = Active_whm)
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(monthname, Active_whm *0.17) %>%
rename(monthCost = Active_whm)
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(monthname, Active_whm ) %>%
rename(monthCost = Active_whm)
MonthlyActual
MonthlyActual$monthCost <- MonthlyActual$monthCost/1000*0.17
MonthlyActual
FC_Monthly_DF
FC_Monthly_DF$monthCost <- with(FC_Monthly_DF, energy * MonthDays / 1000 *0.17 )
FC_Monthly_DF
FC_Monthly_DF <- data.frame(energy = c(FC_Monthly_TS), month = c(time(FC_Monthly_TS)))
FC_Monthly_DF$year <- FC_Monthly_DF$month - FC_Monthly_DF$month%%1
FC_Monthly_DF$month <- round((FC_Monthly_DF$month%%1) * 12,0)+1
FC_Monthly_DF$monthname <- as.character(month(ymd(010101) + months(FC_Monthly_DF$month-1),
label=TRUE,
abbr=TRUE))
FC_Monthly_DF$MonthDays <- with(FC_Monthly_DF, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(year==2008,29,28))))
FC_Monthly_DF$monthCost <- with(FC_Monthly_DF, energy * MonthDays / 1000 *0.17 )
FC_Monthly_DF
MonthlyActual
MonthlyActual$Period <- "Spend"
MonthlyPredict <- FC_Monthly_DF %>% select(monthname, monthCost)
MonthlyPredict$Period <- "Expected"
AggregateMinuteData <- function(FullData, Agg_interval) {
#this function aggregates the minute data to daily, weekly or monthly data
if (Agg_interval == "Daily") {
Agg_data <- arrange(FullData %>%
group_by(Date) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
Date)
}
if (Agg_interval == "Weekly") {
Agg_data <- arrange(FullData %>%
group_by(WD) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
WD)
}
if (Agg_interval == "Monthly") {
Agg_data <- arrange(FullData %>%
group_by(yearmonth, year,month) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm),
Datadays=n_distinct(Date)),
yearmonth)
Agg_data$MonthDays <- with(Agg_data, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(yearmonth==200802,29,28))))
Agg_data$Active_Daily <- with(Agg_data, Active_whm/Datadays)
Agg_data$monthname <- as.character(month(ymd(010101) + months(Agg_data$month-1),
label=TRUE,
abbr=TRUE))
Agg_data$monthCost <- MonthlyActual$Active_whm/1000*0.17
}
return(Agg_data)
}
monthlyData <- AggregateMinuteData(TotalMinuteData,"Monthly")
AggregateMinuteData <- function(FullData, Agg_interval) {
#this function aggregates the minute data to daily, weekly or monthly data
if (Agg_interval == "Daily") {
Agg_data <- arrange(FullData %>%
group_by(Date) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
Date)
}
if (Agg_interval == "Weekly") {
Agg_data <- arrange(FullData %>%
group_by(WD) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
WD)
}
if (Agg_interval == "Monthly") {
Agg_data <- arrange(FullData %>%
group_by(yearmonth, year,month) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm),
Datadays=n_distinct(Date)),
yearmonth)
Agg_data$MonthDays <- with(Agg_data, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(yearmonth==200802,29,28))))
Agg_data$Active_Daily <- with(Agg_data, Active_whm/Datadays)
Agg_data$monthname <- as.character(month(ymd(010101) + months(Agg_data$month-1),
label=TRUE,
abbr=TRUE))
Agg_data$monthCost <- Agg_data$Active_whm/1000*0.17
}
return(Agg_data)
}
monthlyData <- AggregateMinuteData(TotalMinuteData,"Monthly")
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(monthname, monthCost )
MonthlyActual$Period <- "Spend"
MonthlyActual
MonthlyPredict <- FC_Monthly_DF %>% select(monthname, monthCost)
MonthlyPredict$Period <- "Expected"
MonthlyPredict
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
MonthlyCost
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
runApp('Shinyapp03.R')
FC_Monthly_TS <- FC_M$mean #Convert forecast to TS
FC_Monthly_DF <- data.frame(energy = c(FC_Monthly_TS), month = c(time(FC_Monthly_TS)))
FC_Monthly_DF$year <- FC_Monthly_DF$month - FC_Monthly_DF$month%%1
FC_Monthly_DF$month <- round((FC_Monthly_DF$month%%1) * 12,0)+1
FC_Monthly_DF$monthname <- as.character(month(ymd(010101) + months(FC_Monthly_DF$month-1),
label=TRUE,
abbr=TRUE))
FC_Monthly_DF$MonthDays <- with(FC_Monthly_DF, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(year==2008,29,28))))
FC_Monthly_DF$monthCost <- with(FC_Monthly_DF, energy * MonthDays / 1000 *0.17 )
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(month,monthname, monthCost )
MonthlyActual$Period <- "Spend"
MonthlyPredict <- FC_Monthly_DF %>% select(month, monthname, monthCost)
MonthlyPredict$Period <- "Expected"
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
runApp('Shinyapp03.R')
AggregateMinuteData <- function(FullData, Agg_interval) {
#this function aggregates the minute data to daily, weekly or monthly data
if (Agg_interval == "Daily") {
Agg_data <- arrange(FullData %>%
group_by(Date) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
Date)
}
if (Agg_interval == "Weekly") {
Agg_data <- arrange(FullData %>%
group_by(WD) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
WD)
}
if (Agg_interval == "Monthly") {
Agg_data <- arrange(FullData %>%
group_by(yearmonth, year,month) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm),
Datadays=n_distinct(Date)),
yearmonth)
Agg_data$MonthDays <- with(Agg_data, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(yearmonth==200802,29,28))))
Agg_data$Active_Daily <- with(Agg_data, Active_whm/Datadays)
Agg_data$monthname <- as.character(month(ymd(010101) + months(Agg_data$month-1),
label=TRUE,
abbr=FALSE))
Agg_data$monthCost <- Agg_data$Active_whm/1000*0.17
}
return(Agg_data)
}
FC_Monthly_TS <- FC_M$mean #Convert forecast to TS
FC_Monthly_DF <- data.frame(energy = c(FC_Monthly_TS), month = c(time(FC_Monthly_TS)))
FC_Monthly_DF$year <- FC_Monthly_DF$month - FC_Monthly_DF$month%%1
FC_Monthly_DF$month <- round((FC_Monthly_DF$month%%1) * 12,0)+1
FC_Monthly_DF$monthname <- as.character(month(ymd(010101) + months(FC_Monthly_DF$month-1),
label=TRUE,
abbr=FALSE))
FC_Monthly_DF$MonthDays <- with(FC_Monthly_DF, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(year==2008,29,28))))
FC_Monthly_DF$monthCost <- with(FC_Monthly_DF, energy * MonthDays / 1000 *0.17 )
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(month,monthname, monthCost )
MonthlyActual$Period <- "Spend"
MonthlyPredict <- FC_Monthly_DF %>% select(month, monthname, monthCost)
MonthlyPredict$Period <- "Expected"
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
MonthlyCost
monthlyData <- AggregateMinuteData(TotalMinuteData,"Monthly")
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(month,monthname, monthCost )
MonthlyActual$Period <- "Spend"
MonthlyPredict <- FC_Monthly_DF %>% select(month, monthname, monthCost)
MonthlyPredict$Period <- "Expected"
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
MonthlyCost
runApp('Shinyapp03.R')
runApp('Shinyapp03.R')
runApp('Shinyapp03.R')
Agg_data$monthname <- as.character(month(ymd(010101) + months(Agg_data$month-1),
label=TRUE,
abbr=TRUE))
AggregateMinuteData <- function(FullData, Agg_interval) {
#this function aggregates the minute data to daily, weekly or monthly data
if (Agg_interval == "Daily") {
Agg_data <- arrange(FullData %>%
group_by(Date) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
Date)
}
if (Agg_interval == "Weekly") {
Agg_data <- arrange(FullData %>%
group_by(WD) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm)),
WD)
}
if (Agg_interval == "Monthly") {
Agg_data <- arrange(FullData %>%
group_by(yearmonth, year,month) %>%
summarise(minutecount=n(),
Sub1=sum(Sub1),
Sub2=sum(Sub2),
Sub3=sum(Sub3),
Active_whm=sum(Active_whm),
Reactive_whm=sum(Reactive_whm),
Other_whm=sum(Other_whm),
Datadays=n_distinct(Date)),
yearmonth)
Agg_data$MonthDays <- with(Agg_data, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(yearmonth==200802,29,28))))
Agg_data$Active_Daily <- with(Agg_data, Active_whm/Datadays)
Agg_data$monthname <- as.character(month(ymd(010101) + months(Agg_data$month-1),
label=TRUE,
abbr=TRUE))
Agg_data$monthCost <- Agg_data$Active_whm/1000*0.17
}
return(Agg_data)
}
monthlyData <- AggregateMinuteData(TotalMinuteData,"Monthly")
FC_Monthly_TS <- FC_M$mean #Convert forecast to TS
FC_Monthly_DF <- data.frame(energy = c(FC_Monthly_TS), month = c(time(FC_Monthly_TS)))
FC_Monthly_DF$year <- FC_Monthly_DF$month - FC_Monthly_DF$month%%1
FC_Monthly_DF$month <- round((FC_Monthly_DF$month%%1) * 12,0)+1
FC_Monthly_DF$monthname <- as.character(month(ymd(010101) + months(FC_Monthly_DF$month-1),
label=TRUE,
abbr=TRUE))
FC_Monthly_DF$MonthDays <- with(FC_Monthly_DF, ifelse(month %in% c(1, 3, 5, 7, 8, 10, 21),31,
ifelse(month %in% c(4,6,9,11),30,
ifelse(year==2008,29,28))))
FC_Monthly_DF$monthCost <- with(FC_Monthly_DF, energy * MonthDays / 1000 *0.17 )
MonthlyActual <- monthlyData %>%
filter(year==2010) %>%
ungroup() %>%
select(month,monthname, monthCost )
MonthlyActual$Period <- "Spend"
MonthlyPredict <- FC_Monthly_DF %>% select(month, monthname, monthCost)
MonthlyPredict$Period <- "Expected"
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
runApp('Shinyapp03.R')
runApp('Shinyapp03.R')
as.numeric(monthlyData %>%
filter(year==2010 & month==11) %>%
ungroup() %>%
select(monthCost ))
CurrentMonthUsed <- as.numeric(monthlyData %>%
filter(year==2010 & month==11) %>%
ungroup() %>%
select(monthCost ))
MonthlyPredict
MonthlyPredict <- FC_Monthly_DF %>% select(month, monthname, monthCost)
MonthlyPredict$Period <- "Expected"
#correction on current month for already used energy
CurrentMonthUsed <- as.numeric(monthlyData %>%
filter(year==2010 & month==11) %>%
ungroup() %>%
select(monthCost ))
MonthlyPredict <- with(monthCost, ifelse(month==11, monthCost - CurrentMonthUsed, monthCost))
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
runApp('Shinyapp03.R')
MonthlyActual
MonthlyPredict <- FC_Monthly_DF %>% select(month, monthname, monthCost)
MonthlyPredict$Period <- "Expected"
#correction on current month for already used energy
CurrentMonthUsed <- as.numeric(MonthlyActual %>%
filter(month==11) %>%
ungroup() %>%
select(monthCost ))
MonthlyPredict <- with(monthCost, ifelse(month==11, monthCost - CurrentMonthUsed, monthCost))
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
CurrentMonthUsed <- as.numeric(MonthlyActual %>%
filter(month==11) %>%
ungroup() %>%
select(monthCost ))
MonthlyPredict <- with(MonthlyPredict, ifelse(month==11, monthCost - CurrentMonthUsed, monthCost))
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
runApp('Shinyapp03.R')
MonthlyPredict
MonthlyPredict <- FC_Monthly_DF %>% select(month, monthname, monthCost)
MonthlyPredict$Period <- "Expected"
#correction on current month for already used energy
CurrentMonthUsed <- as.numeric(MonthlyActual %>%
filter(month==11) %>%
ungroup() %>%
select(monthCost ))
MonthlyPredict$monthCost <- with(MonthlyPredict, ifelse(month==11, monthCost - CurrentMonthUsed, monthCost))
MonthlyCost <- rbind(MonthlyActual, MonthlyPredict)
saveRDS(MonthlyCost, file = "MonthlyCost.rds")
MonthlyPredict
MonthlyCost
runApp('Shinyapp03.R')
dailyData
head(TotalMinuteData)
