LoopDay,
data789 %>%
filter(NumValue==LoopNr-7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1M7=Sub_metering_1,Sub2M7=Sub_metering_2,Sub3M7=Sub_metering_3),
by = "Time")
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr+7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1P7=Sub_metering_1,Sub2P7=Sub_metering_2,Sub3P7=Sub_metering_3),
by = "Time")
# use actual values of the day or avergae of week before and after
LoopDay$Sub1 <- with(LoopDay,ifelse(is.na(Sub_metering_1),
ifelfse(is.na(Sub1M7) | is.na(Sub1P7),
0,
(Sub1M7+Sub1P7)/2),
Sub_metering_1))
LoopDay$Sub2 <- with(LoopDay,ifelse(is.na(Sub_metering_2),
ifelfse(is.na(Sub2M7) | is.na(Sub2P7),
0,
(Sub2M7+Sub2P7)/2),
Sub_metering_2))
LoopDay$Sub3 <- with(LoopDay,ifelse(is.na(Sub_metering_3),
ifelfse(is.na(Sub3M7) | is.na(Sub3P7),
0,
(Sub3M7+Sub3P7)/2),
Sub_metering_3))
LoopDay <- LoopDay %>% select(NumValue,LoopDate, Time, Sub1, Sub2, Sub3)
ifelse(LoopNr==StartNr,FullData <- LoopDay,FullData <- bind_rows(FullData, LoopDay))
LoopNr = LoopNr+1
}
summary(FullData)
FullData %>% filter(is.na(Sub1))
LoopDate <- "2007-07-15"
EndDate <- "2009-12-31"
EndDate <- "2007-07-22"
LoopNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
StartNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
EndNr <- as.numeric(as.Date(0, origin = as.Date(EndDate)))
while(LoopNr<=EndNr) {
print(LoopNr)
#create dataframe with all minutes and all data
LoopDay <- left_join(DailyMinutes, data789 %>% filter(NumValue==LoopNr), by = "Time")
LoopDay$NumValue <- ifelse(is.na(LoopDay$NumValue),LoopNr,LoopDay$NumValue)
# add the date for in case it was missing
LoopDay$LoopDate<- as.Date(LoopNr, origin="1970-01-01")
# add data day week before and after
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr-7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1M7=Sub_metering_1,Sub2M7=Sub_metering_2,Sub3M7=Sub_metering_3),
by = "Time")
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr+7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1P7=Sub_metering_1,Sub2P7=Sub_metering_2,Sub3P7=Sub_metering_3),
by = "Time")
# use actual values of the day or avergae of week before and after
LoopDay$Sub1 <- with(LoopDay,ifelse(is.na(Sub_metering_1),
ifelfse(is.na(Sub1M7) | is.na(Sub1P7),
0,
(Sub1M7+Sub1P7)/2),
Sub_metering_1))
LoopDay$Sub2 <- with(LoopDay,ifelse(is.na(Sub_metering_2),
ifelfse(is.na(Sub2M7) | is.na(Sub2P7),
0,
(Sub2M7+Sub2P7)/2),
Sub_metering_2))
LoopDay$Sub3 <- with(LoopDay,ifelse(is.na(Sub_metering_3),
ifelfse(is.na(Sub3M7) | is.na(Sub3P7),
0,
(Sub3M7+Sub3P7)/2),
Sub_metering_3))
LoopDay <- LoopDay %>% select(NumValue,LoopDate, Time, Sub1, Sub2, Sub3)
ifelse(LoopNr==StartNr,FullData <- LoopDay,FullData <- bind_rows(FullData, LoopDay))
LoopNr = LoopNr+1
}
LoopDate <- "2007-07-15"
EndDate <- "2009-12-31"
EndDate <- "2007-07-22"
LoopNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
StartNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
EndNr <- as.numeric(as.Date(0, origin = as.Date(EndDate)))
while(LoopNr<=EndNr) {
print(LoopNr)
#create dataframe with all minutes and all data
LoopDay <- left_join(DailyMinutes, data789 %>% filter(NumValue==LoopNr), by = "Time")
LoopDay$NumValue <- ifelse(is.na(LoopDay$NumValue),LoopNr,LoopDay$NumValue)
# add the date for in case it was missing
LoopDay$LoopDate<- as.Date(LoopNr, origin="1970-01-01")
# add data day week before and after
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr-7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1M7=Sub_metering_1,Sub2M7=Sub_metering_2,Sub3M7=Sub_metering_3),
by = "Time")
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr+7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1P7=Sub_metering_1,Sub2P7=Sub_metering_2,Sub3P7=Sub_metering_3),
by = "Time")
# use actual values of the day or avergae of week before and after
LoopDay$Sub1 <- with(LoopDay,ifelse(is.na(Sub_metering_1),
ifelse(is.na(Sub1M7) | is.na(Sub1P7),
0,
(Sub1M7+Sub1P7)/2),
Sub_metering_1))
LoopDay$Sub2 <- with(LoopDay,ifelse(is.na(Sub_metering_2),
ifelse(is.na(Sub2M7) | is.na(Sub2P7),
0,
(Sub2M7+Sub2P7)/2),
Sub_metering_2))
LoopDay$Sub3 <- with(LoopDay,ifelse(is.na(Sub_metering_3),
ifelse(is.na(Sub3M7) | is.na(Sub3P7),
0,
(Sub3M7+Sub3P7)/2),
Sub_metering_3))
LoopDay <- LoopDay %>% select(NumValue,LoopDate, Time, Sub1, Sub2, Sub3)
ifelse(LoopNr==StartNr,FullData <- LoopDay,FullData <- bind_rows(FullData, LoopDay))
LoopNr = LoopNr+1
}
summary(FullData)
arrange(FullData %>% group_by(LoopDate, NumValue) %>%
summarise(minutecount=n()) %>%
filter(is.na(NumValue)), -minutecount)
LoopDate <- "2007-01-01"
EndDate <- "2009-12-31"
#EndDate <- "2007-07-22"
LoopNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
StartNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
EndNr <- as.numeric(as.Date(0, origin = as.Date(EndDate)))
while(LoopNr<=EndNr) {
print(LoopNr)
#create dataframe with all minutes and all data
LoopDay <- left_join(DailyMinutes, data789 %>% filter(NumValue==LoopNr), by = "Time")
LoopDay$NumValue <- ifelse(is.na(LoopDay$NumValue),LoopNr,LoopDay$NumValue)
# add the date for in case it was missing
LoopDay$LoopDate<- as.Date(LoopNr, origin="1970-01-01")
# add data day week before and after
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr-7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1M7=Sub_metering_1,Sub2M7=Sub_metering_2,Sub3M7=Sub_metering_3),
by = "Time")
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr+7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1P7=Sub_metering_1,Sub2P7=Sub_metering_2,Sub3P7=Sub_metering_3),
by = "Time")
# use actual values of the day or avergae of week before and after
LoopDay$Sub1 <- with(LoopDay,ifelse(is.na(Sub_metering_1),
ifelse(is.na(Sub1M7) | is.na(Sub1P7),
0,
(Sub1M7+Sub1P7)/2),
Sub_metering_1))
LoopDay$Sub2 <- with(LoopDay,ifelse(is.na(Sub_metering_2),
ifelse(is.na(Sub2M7) | is.na(Sub2P7),
0,
(Sub2M7+Sub2P7)/2),
Sub_metering_2))
LoopDay$Sub3 <- with(LoopDay,ifelse(is.na(Sub_metering_3),
ifelse(is.na(Sub3M7) | is.na(Sub3P7),
0,
(Sub3M7+Sub3P7)/2),
Sub_metering_3))
LoopDay <- LoopDay %>% select(NumValue,LoopDate, Time, Sub1, Sub2, Sub3)
ifelse(LoopNr==StartNr,FullData <- LoopDay,FullData <- bind_rows(FullData, LoopDay))
LoopNr = LoopNr+1
}
#sort FullData in time
FullData <- arrange(FullData, LoopDate, Time)
CompleteMissingData <- function(radius) {
value <- pi()*radius^2
returnValue(value)
}
CompleteMissingData(5)
value <- pi*radius^2
returnValue(value)
return(value)
value <- pi*radius^2
CompleteMissingData(5)
value <- 3.14*radius^2
CompleteMissingData(5)
value <- 3.14*radiu^2
return(value)
CompleteMissingData <- function() {
value <- 3.14^2
return(value)
}
CompleteMissingData <- function(r) {
value <- 3.14*r^2
return(value)
}
CompleteMissingData(5)
CompleteMissingData <- function(LoopDate, EndDate, data789) {
#This function replaces the missing records (minute based)
#With average previous and following week's values
# create Dataframe with just all 1440 minutes
DailyMinutes <- data789 %>% filter(Date=="2007-01-01") %>% select(Time)
#set start and end dates for loop
LoopDate <- "2007-01-01"
EndDate <- "2009-12-31"
#EndDate <- "2007-07-22"
LoopNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
StartNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
EndNr <- as.numeric(as.Date(0, origin = as.Date(EndDate)))
while(LoopNr<=EndNr) {
print(LoopNr)
#create dataframe with all minutes and all data
LoopDay <- left_join(DailyMinutes, data789 %>% filter(NumValue==LoopNr), by = "Time")
LoopDay$NumValue <- ifelse(is.na(LoopDay$NumValue),LoopNr,LoopDay$NumValue)
# add the date for in case it was missing
LoopDay$LoopDate<- as.Date(LoopNr, origin="1970-01-01")
# add data day week before and after
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr-7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1M7=Sub_metering_1,Sub2M7=Sub_metering_2,Sub3M7=Sub_metering_3),
by = "Time")
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr+7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1P7=Sub_metering_1,Sub2P7=Sub_metering_2,Sub3P7=Sub_metering_3),
by = "Time")
# use actual values of the day or avergae of week before and after
LoopDay$Sub1 <- with(LoopDay,ifelse(is.na(Sub_metering_1),
ifelse(is.na(Sub1M7) | is.na(Sub1P7),
0,
(Sub1M7+Sub1P7)/2),
Sub_metering_1))
LoopDay$Sub2 <- with(LoopDay,ifelse(is.na(Sub_metering_2),
ifelse(is.na(Sub2M7) | is.na(Sub2P7),
0,
(Sub2M7+Sub2P7)/2),
Sub_metering_2))
LoopDay$Sub3 <- with(LoopDay,ifelse(is.na(Sub_metering_3),
ifelse(is.na(Sub3M7) | is.na(Sub3P7),
0,
(Sub3M7+Sub3P7)/2),
Sub_metering_3))
LoopDay <- LoopDay %>% select(NumValue,LoopDate, Time, Sub1, Sub2, Sub3)
ifelse(LoopNr==StartNr,FullData <- LoopDay,FullData <- bind_rows(FullData, LoopDay))
LoopNr = LoopNr+1
}
#sort FullData in time
FullData <- arrange(FullData, LoopDate, Time)
return(FullData)
}
LoopDate <- "2007-01-01"
EndDate <- "2009-12-31"
CompleteMissingData <- function(LoopDate, EndDate, data789)
LoopNr
LoopDate <- "2007-01-01"
EndDate <- "2009-12-31"
FullData <- CompleteMissingData(LoopDate, EndDate, data789)
LoopDate <- "2007-01-01"
EndDate <- "2009-12-31"
FullData <- CompleteMissingData(LoopDate, EndDate, data789)
CompleteMissingData <- function(LoopDate, EndDate, data789) {
#This function replaces the missing records (minute based)
#With average previous and following week's values
# create Dataframe with just all 1440 minutes
DailyMinutes <- data789 %>% filter(Date=="2007-01-01") %>% select(Time)
#set start and end dates for loop
#LoopDate <- "2007-01-01"
#EndDate <- "2009-12-31"
#EndDate <- "2007-07-22"
LoopNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
StartNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
EndNr <- as.numeric(as.Date(0, origin = as.Date(EndDate)))
while(LoopNr<=EndNr) {
print(LoopNr)
#create dataframe with all minutes and all data
LoopDay <- left_join(DailyMinutes, data789 %>% filter(NumValue==LoopNr), by = "Time")
LoopDay$NumValue <- ifelse(is.na(LoopDay$NumValue),LoopNr,LoopDay$NumValue)
# add the date for in case it was missing
LoopDay$LoopDate<- as.Date(LoopNr, origin="1970-01-01")
# add data day week before and after
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr-7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1M7=Sub_metering_1,Sub2M7=Sub_metering_2,Sub3M7=Sub_metering_3),
by = "Time")
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr+7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1P7=Sub_metering_1,Sub2P7=Sub_metering_2,Sub3P7=Sub_metering_3),
by = "Time")
# use actual values of the day or avergae of week before and after
LoopDay$Sub1 <- with(LoopDay,ifelse(is.na(Sub_metering_1),
ifelse(is.na(Sub1M7) | is.na(Sub1P7),
0,
(Sub1M7+Sub1P7)/2),
Sub_metering_1))
LoopDay$Sub2 <- with(LoopDay,ifelse(is.na(Sub_metering_2),
ifelse(is.na(Sub2M7) | is.na(Sub2P7),
0,
(Sub2M7+Sub2P7)/2),
Sub_metering_2))
LoopDay$Sub3 <- with(LoopDay,ifelse(is.na(Sub_metering_3),
ifelse(is.na(Sub3M7) | is.na(Sub3P7),
0,
(Sub3M7+Sub3P7)/2),
Sub_metering_3))
LoopDay <- LoopDay %>% select(NumValue,LoopDate, Time, Sub1, Sub2, Sub3)
ifelse(LoopNr==StartNr,FullData <- LoopDay,FullData <- bind_rows(FullData, LoopDay))
LoopNr = LoopNr+1
}
#sort FullData in time
FullData <- arrange(FullData, LoopDate, Time)
return(FullData)
}
CompleteMissingData("2007-01-01","2007-01-03", data789)
CompleteMissingData <- function(LoopDate, EndDate, data789) {
#This function replaces the missing records (minute based)
#With average previous and following week's values
# create Dataframe with just all 1440 minutes
DailyMinutes <- data789 %>% filter(Date=="2007-01-01") %>% select(Time)
#set start and end dates for loop
#LoopDate <- "2007-01-01"
#EndDate <- "2009-12-31"
#EndDate <- "2007-07-22"
LoopNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
StartNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
EndNr <- as.numeric(as.Date(0, origin = as.Date(EndDate)))
while(LoopNr<=EndNr) {
#print(LoopNr)
#create dataframe with all minutes and all data
LoopDay <- left_join(DailyMinutes, data789 %>% filter(NumValue==LoopNr), by = "Time")
LoopDay$NumValue <- ifelse(is.na(LoopDay$NumValue),LoopNr,LoopDay$NumValue)
# add the date for in case it was missing
LoopDay$LoopDate<- as.Date(LoopNr, origin="1970-01-01")
# add data day week before and after
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr-7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1M7=Sub_metering_1,Sub2M7=Sub_metering_2,Sub3M7=Sub_metering_3),
by = "Time")
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr+7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1P7=Sub_metering_1,Sub2P7=Sub_metering_2,Sub3P7=Sub_metering_3),
by = "Time")
# use actual values of the day or avergae of week before and after
LoopDay$Sub1 <- with(LoopDay,ifelse(is.na(Sub_metering_1),
ifelse(is.na(Sub1M7) | is.na(Sub1P7),
0,
(Sub1M7+Sub1P7)/2),
Sub_metering_1))
LoopDay$Sub2 <- with(LoopDay,ifelse(is.na(Sub_metering_2),
ifelse(is.na(Sub2M7) | is.na(Sub2P7),
0,
(Sub2M7+Sub2P7)/2),
Sub_metering_2))
LoopDay$Sub3 <- with(LoopDay,ifelse(is.na(Sub_metering_3),
ifelse(is.na(Sub3M7) | is.na(Sub3P7),
0,
(Sub3M7+Sub3P7)/2),
Sub_metering_3))
LoopDay <- LoopDay %>% select(NumValue,LoopDate, Time, Sub1, Sub2, Sub3)
ifelse(LoopNr==StartNr,FullData <- LoopDay,FullData <- bind_rows(FullData, LoopDay))
LoopNr = LoopNr+1
}
#sort FullData in time
FullData <- arrange(FullData, LoopDate, Time)
return(FullData)
}
CompleteMissingData("2007-01-01","2007-01-03", data789)
CompleteMissingData <- function(LoopDate, EndDate, data789) {
#This function replaces the missing records (minute based)
#With average previous and following week's values
# create Dataframe with just all 1440 minutes
DailyMinutes <- data789 %>% filter(Date=="2007-01-01") %>% select(Time)
#set start and end dates for loop
#LoopDate <- "2007-01-01"
#EndDate <- "2009-12-31"
#EndDate <- "2007-07-22"
LoopNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
StartNr <- as.numeric(as.Date(0, origin = as.Date(LoopDate)))
EndNr <- as.numeric(as.Date(0, origin = as.Date(EndDate)))
while(LoopNr<=EndNr) {
#print(LoopNr)
#create dataframe with all minutes and all data
LoopDay <- left_join(DailyMinutes, data789 %>% filter(NumValue==LoopNr), by = "Time")
LoopDay$NumValue <- ifelse(is.na(LoopDay$NumValue),LoopNr,LoopDay$NumValue)
# add the date for in case it was missing
LoopDay$LoopDate<- as.Date(LoopNr, origin="1970-01-01")
# add data day week before and after
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr-7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1M7=Sub_metering_1,Sub2M7=Sub_metering_2,Sub3M7=Sub_metering_3),
by = "Time")
LoopDay <- left_join(
LoopDay,
data789 %>%
filter(NumValue==LoopNr+7) %>%
select(Time,Sub_metering_1,Sub_metering_2,Sub_metering_3) %>%
rename(Sub1P7=Sub_metering_1,Sub2P7=Sub_metering_2,Sub3P7=Sub_metering_3),
by = "Time")
# use actual values of the day or avergae of week before and after
LoopDay$Sub1 <- with(LoopDay,ifelse(is.na(Sub_metering_1),
ifelse(is.na(Sub1M7) | is.na(Sub1P7),
0,
(Sub1M7+Sub1P7)/2),
Sub_metering_1))
LoopDay$Sub2 <- with(LoopDay,ifelse(is.na(Sub_metering_2),
ifelse(is.na(Sub2M7) | is.na(Sub2P7),
0,
(Sub2M7+Sub2P7)/2),
Sub_metering_2))
LoopDay$Sub3 <- with(LoopDay,ifelse(is.na(Sub_metering_3),
ifelse(is.na(Sub3M7) | is.na(Sub3P7),
0,
(Sub3M7+Sub3P7)/2),
Sub_metering_3))
LoopDay <- LoopDay %>% select(NumValue,LoopDate, Time, Sub1, Sub2, Sub3)
ifelse(LoopNr==StartNr,FullData <- LoopDay,FullData <- bind_rows(FullData, LoopDay))
LoopNr = LoopNr+1
}
#sort FullData in time
#FullData <- arrange(FullData, LoopDate, Time)
return(FullData)
}
CompleteMissingData("2007-01-01","2007-01-03", data789)
CompleteMissingData("2007-01-01","2007-12-03", data789)
LoopDate <- "2007-01-01"
EndDate <- "2009-12-31"
FullData <- CompleteMissingData(LoopDate, EndDate, data789)
str(FullData)
FullData$DateTime <- as.POSIXct(FullData$DateTime, "%Y/%m/%d %H:%M:%S")
FullData <- cbind(FullData,paste(FullData$Date,FullData$Time), stringsAsFactors=FALSE)
str(FullData)
colnames(FullData)[7] <-"DateTime"
FullData <- FullData[,c(ncol(FullData), 1:(ncol(FullData)-1))]
FullData$DateTime <- as.POSIXct(FullData$DateTime, "%Y/%m/%d %H:%M:%S")
FullName <- FullName %>% rename(Date=LoopDate)
FullDate <- FullDate %>% rename(Date=LoopDate)
str(FullData)
FullData <- FullData %>% rename(Date=LoopDate)
str(FullData)
daily789 <- arrange(FullData %>%   group_by(Date) %>%
summarise(minutecount=n(),
sub1=sum(Sub1),
sub2=sum(Sub2),
sub3=sum(Sub3)),
Date)
dailyTS <- ts(daily789,start=2007, frequency=365)
ggseasonplot(dailyTS, col=rainbow(12), year.labels=TRUE)
dailyTS
dailyTS <- ts(FullData["Sub1"],start=2007, frequency=365)
ggseasonplot(dailyTS, col=rainbow(12), year.labels=TRUE)
dailyTS <- ts(FullData,start=2007, frequency=365)
FullData$year <- year(FullData$DateTime)
FullData$year <- year(FullData$DateTime)
FullData$year <- year(FullData$Date)
FullData$yearmonth <- year(FullData$Date)*100+month(FullData789$Date)
FullData$yearmonth <- year(FullData$Date)*100+month(FullData$Date)
monthly789 <- arrange(FullData %>%   group_by(yearmonth) %>%
summarise(minutecount=n(),
sub1=sum(Sub1),
sub2=sum(Sub2),
sub3=sum(Sub3)),
yearmonth)
monthly789$yearmonth <- as.character(monthly789$yearmonth)
monthlyTS <- ts(monthly789,start=2007, frequency=12)
ggseasonplot(monthlyTS,x=Sub1, col=rainbow(12), year.labels=TRUE)
ggseasonplot(monthlyTS,x=sub1, col=rainbow(12), year.labels=TRUE)
monthlyTS
ggseasonplot(monthlyTS,x=sub1, col=rainbow(12), year.labels=TRUE)
monthlyTS <- ts(monthly789$sub1,start=2007, frequency=12)
ggseasonplot(monthlyTS, col=rainbow(12), year.labels=TRUE)
monthlyTS <- ts(monthly789$sub2,start=2007, frequency=12)
ggseasonplot(monthlyTS, col=rainbow(12), year.labels=TRUE)
monthlyTS <- ts(monthly789$sub3,start=2007, frequency=12)
ggseasonplot(monthlyTS, col=rainbow(12), year.labels=TRUE)
monthlyTS <- ts(monthly789,start=2007, frequency=12)
ggseasonplot(monthlyTS$sub3, col=rainbow(12), year.labels=TRUE)
ggseasonplot(monthlyTS[sub3], col=rainbow(12), year.labels=TRUE)
ggseasonplot(monthlyTS,y=sub3, col=rainbow(12), year.labels=TRUE)
ggseasonplot(monthlyTS,x=yearmonth,y=sub3, col=rainbow(12), year.labels=TRUE)
monthly789
monthlyTS <- ts(monthly789,start=2007, frequency=12)
monthlyTS
